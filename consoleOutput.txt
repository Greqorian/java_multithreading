
Thread ID: 0 Start the main Thread
Numbers range: [15, 270]
Pararell threads: 8
-------------------
Thread ID: 1 Starts parrallel thread
Thread ID: 2 Starts parrallel thread
Thread ID: 1 Numbers interval: [15, 46]
Thread ID: 2 Numbers interval: [47, 78]
Thread ID: 1 Prime numbers: [17, 19, 23, 29, 31, 37, 41, 43]
Thread ID: 3 Starts parrallel thread
Thread ID: 3 Numbers interval: [79, 110]
Thread ID: 4 Starts parrallel thread
Thread ID: 4 Numbers interval: [111, 142]
Thread ID: 8 Starts parrallel thread
Thread ID: 8 Numbers interval: [239, 270]
Thread ID: 3 Prime numbers: [79, 83, 89, 97, 101, 103, 107, 109]
Thread ID: 7 Starts parrallel thread
Thread ID: 7 Numbers interval: [207, 238]
Thread ID: 5 Starts parrallel thread
Thread ID: 6 Starts parrallel thread
Thread ID: 6 Numbers interval: [175, 206]
Thread ID: 2 Prime numbers: [47, 53, 59, 61, 67, 71, 73]
Thread ID: 6 Prime numbers: [179, 181, 191, 193, 197, 199]
Thread ID: 5 Numbers interval: [143, 174]
Thread ID: 7 Prime numbers: [211, 223, 227, 229, 233]
Thread ID: 8 Prime numbers: [239, 241, 251, 257, 263, 269]
Thread ID: 4 Prime numbers: [113, 127, 131, 137, 139]
Thread ID: 5 Prime numbers: [149, 151, 157, 163, 167, 173]
-------  End of processing ------------
Thread ID: 0 All found Primes: [17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 239, 241, 251, 257, 263, 269, 211, 223, 227, 229, 233, 179, 181, 191, 193, 197, 199, 149, 151, 157, 163, 167, 173]
Processing time in nanoseconds: 2763700
Prime numbers saved to file: Primes.txt

-------------------- Time for number of threads summary -----------------------
Threads: 1 Total processing time: 2509800
Threads: 2 Total processing time: 1690700
Threads: 4 Total processing time: 1851300
Threads: 8 Total processing time: 2763700
Die Aufteilung der Aufgabe auf mehrere Threads hat einen messbaren Vorteil fï¿½r die Verarbeitungszeit gebracht. Das beste Ergebnis wurde bei 2 Threads erzielt.
Splitting the task into multiple threads yielded a measurable benefit in processing time. The best time result was obtained for 2 threads.
